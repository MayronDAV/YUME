#pragma once
#include "optick/optick.h"


#if defined(YM_PLATFORM_WINDOWS) && defined(YM_PROFILE)

	#define YM_PROFILE_FRAME(NAME, ...) OPTICK_FRAME(NAME, __VA_ARGS__);
	#define YM_PROFILE_FUNCTION() OPTICK_EVENT();
	#define YM_PROFILE_SCOPE_T(NAME, CATEGORY) OPTICK_CATEGORY(NAME, CATEGORY);
	#define YM_PROFILE_SCOPE(NAME) YM_PROFILE_SCOPE_T(NAME, Optick::Category::Debug);
	#define YM_PROFILE_SHUTDOWN() OPTICK_SHUTDOWN();
	#define YM_PROFILE_GPU_INIT_VULKAN(DEVICES, PHYSICAL_DEVICES, CMD_QUEUES, CMD_QUEUES_FAMILY, NUM_CMD_QUEUS, FUNCTIONS) OPTICK_GPU_INIT_VULKAN(DEVICES, PHYSICAL_DEVICES, CMD_QUEUES, CMD_QUEUES_FAMILY, NUM_CMD_QUEUS, FUNCTIONS);
	#define YM_PROFILE_GPU_CONTEXT(cmdBuffer) OPTICK_GPU_CONTEXT(cmdBuffer);
	#define YM_PROFILE_GPU_FLIP(swapchain) OPTICK_GPU_FLIP(swapchain);
	#define YM_PROFILE_TAG(NAME, ...) OPTICK_TAG(NAME, ##__VA_ARGS__);

#else

	#ifdef USE_OPTICK
	#undef USE_OPTICK
	#endif
	#define USE_OPTICK 0

	#define YM_PROFILE_FRAME(NAME, ...)
	#define YM_PROFILE_FUNCTION()
	#define YM_PROFILE_SCOPE_T(NAME, CATEGORY)
	#define YM_PROFILE_SCOPE(NAME)
	#define YM_PROFILE_SHUTDOWN()
	#define YM_PROFILE_GPU_INIT_VULKAN(DEVICES, PHYSICAL_DEVICES, CMD_QUEUES, CMD_QUEUES_FAMILY, NUM_CMD_QUEUS, FUNCTIONS)
	#define YM_PROFILE_GPU_CONTEXT(cmdBuffer)
	#define YM_PROFILE_GPU_FLIP(swapchain)
	#define YM_PROFILE_TAG(NAME, ...)

#endif
